buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.kyriba.tool'
version = '1.0.4-SNAPSHOT'
sourceCompatibility = 1.10

ext {
    postgresVersion = "42.2.5"
    liquibaseVersion = '3.6.1'

    jaxbApiVersion = '2.3.0'
    apacheCommonsLangVersion = '3.7'
    guavaVersion = '25.1-jre'

    springDbUnitVersion = '1.2.0'
    dbUnitVersion = '2.5.0'
}

repositories {
    mavenCentral()
}

dependencies {
    //core
    compile("com.google.guava:guava:$guavaVersion")
    compile("org.apache.commons:commons-lang3:$apacheCommonsLangVersion")
    compile("javax.xml.bind:jaxb-api:$jaxbApiVersion")
    compile('org.springframework.boot:spring-boot-starter-mail')

    // web
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")

    // database
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    runtime("org.postgresql:postgresql:$postgresVersion")
    runtime("org.liquibase:liquibase-core:$liquibaseVersion")

    //dev
    compile('org.springframework.boot:spring-boot-devtools')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("com.github.springtestdbunit:spring-test-dbunit:$springDbUnitVersion")
    testCompile("org.dbunit:dbunit:$dbUnitVersion")
    testCompile('com.h2database:h2')
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
        html.destination file("${buildDir}/jacocoHtml")
    }
}